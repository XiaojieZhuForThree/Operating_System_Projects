package edu.utdallas.taskExecutorImpl;
import edu.utdallas.blockingFIFO.blockingFifoQueue;
import edu.utdallas.taskExecutor.Task;
import edu.utdallas.taskExecutor.TaskExecutor;

public class TaskExecutorImpl implements TaskExecutor
{
	blockingFifoQueue bfq;
	public TaskExecutorImpl(int n) {
		bfq = new blockingFifoQueue(100);
	}
	@Override
	public void addTask(Task task)
	{
		while (true) {
			
			try {
				bfq.put(task);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		// TODO Complete the implementation
	}
	
	public void runTask() {
		Runnable inserter = new Runnable() {
			public void run()
			{
			    while(true) {
			        // take() blocks if queue is empty
			        Task newTask = bfq.take();
			        try {
			            newTask.execute();
			        }
			        catch(Throwable th) {
			           // Log (e.g. print exception’s message to console) 
			           // and drop any exceptions thrown by the task’s
			           // execution.
			        }
			    }

			}
		};
		
		Thread insertThread = new Thread(inserter);
	}

}
