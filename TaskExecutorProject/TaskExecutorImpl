package edu.utdallas.taskExecutorImpl;

import java.util.*;

import edu.utdallas.blockingFIFO.blockingFifoQueue;
import edu.utdallas.taskExecutor.Task;
import edu.utdallas.taskExecutor.TaskExecutor;

public class TaskExecutorImpl implements TaskExecutor {
	blockingFifoQueue bfq;
	List<Thread> ThreadPool;
	Task task;
	Thread addThread;
	Thread runThread;
	Runnable running = new Runnable() {
		public void run() {
			try {
				Task newTask = bfq.take();
				newTask.execute();
			} catch (Exception e) {

			}
		}
	};
	Runnable adding = new Runnable() {
		public void run() {
			try {
				bfq.put(task);
			} catch (Exception e) {

			}
		}
	};
	public TaskExecutorImpl(int n) {
		ThreadPool = new ArrayList<>();
		for (int i = 0; i < 10; i++) {
			ThreadPool.add(new Thread(running));
		}
		addThread = new Thread(adding);
		runThread = new Thread(running);
		bfq = new blockingFifoQueue(100, addThread, runThread);
		
	}

	public void addTask(Task task) {
		this.task = task;
		try {
			adding.run();
		} catch (Exception e) {
			System.out.println(e);
		}
		try {
			runThread.start();
		} catch (Exception e) {
			System.out.println(e);
		}

	}
}
